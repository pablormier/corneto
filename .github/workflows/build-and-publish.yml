name: Publish Python Package

on:
  push:
    tags:
      - 'v*'

permissions:
  id-token: write     # Required for OIDC trusted publishing
  contents: write     # Required for creating releases
  pull-requests: read # Required for release notes generation

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the full repo (including tags)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Set up Python 3.11
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Install Poetry (latest 1.x) into .venv
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 'latest'
          virtualenvs-create: true
          virtualenvs-in-project: true

      # 4. Cache Poetry & pip caches for faster installs
      - name: Cache Poetry and pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      # 5. Install dependencies
      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      # 6. Validate tag and determine if should publish
      - name: Validate tag for publishing
        id: validate_tag
        run: |
          set -e
          case "${GITHUB_REF}" in
            refs/tags/v*)
              version="${GITHUB_REF#refs/tags/}"
              echo "Valid release tag detected: ${version}"
              echo "should_publish=true" >> $GITHUB_OUTPUT
              echo "version=${version}" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "Not a v* tag: ${GITHUB_REF}, skipping publishing"
              echo "should_publish=false" >> $GITHUB_OUTPUT
              exit 0
              ;;
          esac

      # 7. Build source & wheel (only if should publish)
      - name: Build package
        if: steps.validate_tag.outputs.should_publish == 'true'
        run: poetry build

      # 8. Create GitHub Release with automated notes
      - name: Create GitHub Release
        if: steps.validate_tag.outputs.should_publish == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.validate_tag.outputs.version }}
          name: Release ${{ steps.validate_tag.outputs.version }}
          generate_release_notes: true
          make_latest: true
          files: |
            dist/*
          body: |
            ## ðŸ“¦ Installation

            ```bash
            pip install corneto==${{ steps.validate_tag.outputs.version }}
            ```

            ## ðŸ“– Documentation

            - [ðŸ“š Documentation](https://saezlab.github.io/corneto/)
            - [ðŸš€ Getting Started](https://saezlab.github.io/corneto/install.html)
            - [ðŸ“‘ API Reference](https://saezlab.github.io/corneto/api/)

            ---

      # 9. Publish via PyPI OIDC trusted publishing (only if should publish)
      - name: Publish to PyPI
        if: steps.validate_tag.outputs.should_publish == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
