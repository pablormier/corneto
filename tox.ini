[tox]
minversion = 4.0
envlist =
    py310
    lint
    typing
    docs
    docs-force
    docs-clean
    docs-werror
    docs-all
    docs-linkcheck
    generate-switcher
    docs-full
    docs-serve

[testenv]
description = Run unit tests
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install --with dev,docs --no-interaction
commands =
    poetry run pytest tests

[testenv:lint]
description = Lint code (ruff, flake8, pydocstyle)
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install --with dev --no-interaction
commands =
    poetry run ruff corneto
    poetry run flake8 corneto
    poetry run pydocstyle corneto

[testenv:typing]
description = Run static type checks (mypy)
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install --with dev --no-interaction
    poetry run pip install mypy
commands =
    poetry run mypy corneto

[testenv:docs]
description = Build documentation (HTML)
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install --with docs --no-interaction
commands =
    poetry run sphinx-build -b html docs docs/_build/html

[testenv:docs-force]
description = Build docs with forced notebook execution
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install --with docs --no-interaction
commands =
    poetry run sphinx-build -b html -D nb_execution_mode=force docs docs/_build/html

[testenv:docs-clean]
description = Clean the docs build directory and build docs
skip_install = true
allowlist_externals = poetry, rm
commands_pre =
    poetry install --with docs --no-interaction
    rm -rf docs/_build/html
commands =
    poetry run sphinx-build -b html docs docs/_build/html

[testenv:docs-werror]
description = Build docs, treat warnings as errors
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install --with docs --no-interaction
commands =
    poetry run sphinx-build -b html -W docs docs/_build/html

[testenv:docs-all]
description = Clean, force notebook execution, and stop on warnings
skip_install = true
allowlist_externals = poetry, rm
commands_pre =
    poetry install --with docs --no-interaction
    rm -rf docs/_build/html
commands =
    poetry run sphinx-build -b html -D nb_execution_mode=force docs docs/_build/html

[testenv:docs-linkcheck]
description = Check documentation for broken links
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install --with docs --no-interaction
commands =
    poetry run sphinx-build -b linkcheck docs docs/_build/linkcheck

[testenv:generate-switcher]
description = Generate switcher.json for docs version switching
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install --with docs --no-interaction
commands =
    poetry run python docs/generate_switcher.py

[testenv:docs-full]
description = Full local docs test: build + generate switcher
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install --with docs --no-interaction
commands =
    poetry run sphinx-build -b html docs docs/_build/html
    poetry run python docs/generate_switcher.py

[testenv:docs-serve]
description = Serve the built documentation locally at http://localhost:8000
skip_install = true
allowlist_externals = poetry, python
commands_pre =
    poetry install --with docs --no-interaction
commands =
    python -m http.server 8000 --directory docs/_build/html

