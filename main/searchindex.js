Search.setIndex({"alltitles": {"A more complex knapsack": [[18, "a-more-complex-knapsack"]], "A quick example": [[32, "a-quick-example"]], "API Reference": [[5, null]], "Acknowledgements": [[35, "acknowledgements"]], "Acyclic Flows": [[17, null]], "CARNIVAL": [[32, null]], "COBRApy: Constraint-based metabolic modeling in Python": [[9, null]], "CORNETO": [[5, "corneto"]], "CORNETO <span class=\"hidden-title-marker\"></span>": [[35, null]], "CVXPY: Convex optimization, for everyone": [[10, null]], "Constrained Optimization": [[18, null]], "Contents:": [[5, null]], "Context-specific metabolic model from transcriptomics data": [[36, null]], "Context-specific models (iMAT)": [[23, null]], "Creating a weighted graph": [[30, "creating-a-weighted-graph"]], "Decoupler: Ensemble of methods to infer biological activities": [[11, null]], "Edge attributes": [[21, "edge-attributes"]], "Exact Steiner Trees with CORNETO": [[31, "exact-steiner-trees-with-corneto"]], "FBA with CORNETO": [[22, "fba-with-corneto"]], "Fast carnival": [[32, "fast-carnival"]], "Flux Balance Analysis (FBA)": [[22, null]], "Getting started": [[19, null]], "Heuristic steiner tree from NetworkX": [[31, "heuristic-steiner-tree-from-networkx"]], "Hypergraphs": [[21, "hypergraphs"]], "Importing graphs": [[21, "importing-graphs"]], "Interactomics": [[8, null]], "Interoperability": [[12, null]], "LIANA+: An all-in-one cell-cell communication framework": [[13, null]], "Largest DAG from a given source and sink vertex": [[17, "largest-dag-from-a-given-source-and-sink-vertex"]], "Largest DAG from any source to any sink": [[17, "largest-dag-from-any-source-to-any-sink"]], "Manual implementation of sparse FBA": [[27, "manual-implementation-of-sparse-fba"]], "Manually creating a graph": [[21, "manually-creating-a-graph"]], "Metabolism": [[24, null]], "Module contents": [[0, "module-corneto"], [1, "module-corneto.backend"], [2, "module-corneto.methods"], [3, "module-corneto.methods.metabolism"], [4, "module-corneto.utils"]], "Multi-commodity Network Flows": [[20, null]], "Multi-condition CARNIVAL": [[34, null]], "Multi-condition iMAT": [[25, null]], "Multi-condition sparse FBA": [[26, null]], "Network methods": [[28, null]], "NetworkX: Network Analysis in Python": [[14, null]], "Omnipath: intra- & intercellular signaling knowledge": [[15, null]], "PICOS: A Python interface to conic optimization solvers": [[16, null]], "Prior Knowledge and Graphs": [[21, null]], "Prize-Collecting Steiner Trees (PCSTs)": [[29, null]], "Random graphs": [[30, "random-graphs"]], "Saving and reading": [[21, "saving-and-reading"]], "Shortest paths": [[30, null]], "Signaling": [[33, null]], "Sparse FBA": [[27, null]], "Sparse FBA with min. flux": [[27, "sparse-fba-with-min-flux"]], "Steiner Trees (STs)": [[31, null]], "Submodules": [[2, "submodules"], [3, "submodules"]], "Subpackages": [[0, "subpackages"], [2, "subpackages"]], "The Knapsack Problem": [[18, "the-knapsack-problem"]], "Tutorials": [[37, null]], "User guide": [[7, null]], "Using COBRApy": [[22, "using-cobrapy"]], "What is FBA?": [[22, "what-is-fba"]], "corneto": [[6, null]], "corneto package": [[0, null]], "corneto.backend package": [[1, null]], "corneto.methods package": [[2, null]], "corneto.methods.carnival module": [[2, "module-corneto.methods.carnival"]], "corneto.methods.metabolism package": [[3, null]], "corneto.methods.metabolism.fba module": [[3, "module-corneto.methods.metabolism.fba"]], "corneto.methods.shortest_path module": [[2, "module-corneto.methods.shortest_path"]], "corneto.methods.signaling module": [[2, "module-corneto.methods.signaling"]], "corneto.methods.steiner module": [[2, "module-corneto.methods.steiner"]], "corneto.utils package": [[4, null]]}, "docnames": ["api/corneto", "api/corneto.backend", "api/corneto.methods", "api/corneto.methods.metabolism", "api/corneto.utils", "api/index", "api/modules", "guide/index", "guide/interactomics/index", "guide/interoperability/cobrapy", "guide/interoperability/cvxpy", "guide/interoperability/decoupler", "guide/interoperability/index", "guide/interoperability/liana", "guide/interoperability/networkx", "guide/interoperability/omnipath", "guide/interoperability/picos", "guide/intro/acyclic-flows", "guide/intro/constrained-optimization", "guide/intro/index", "guide/intro/multi-commodity-network-flows", "guide/intro/prior-knowledge", "guide/metabolism/flux-balance-analysis", "guide/metabolism/imat", "guide/metabolism/index", "guide/metabolism/multicondition-imat", "guide/metabolism/multicondition-sfba", "guide/metabolism/sparse-fba", "guide/networks/index", "guide/networks/pcst", "guide/networks/shortest-paths", "guide/networks/steiner-trees", "guide/signaling/carnival", "guide/signaling/index", "guide/signaling/multicondition-carnival", "index", "tutorials/context-specific-metabolic-omics", "tutorials/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api/corneto.rst", "api/corneto.backend.rst", "api/corneto.methods.rst", "api/corneto.methods.metabolism.rst", "api/corneto.utils.rst", "api/index.rst", "api/modules.rst", "guide/index.md", "guide/interactomics/index.md", "guide/interoperability/cobrapy.ipynb", "guide/interoperability/cvxpy.ipynb", "guide/interoperability/decoupler.ipynb", "guide/interoperability/index.md", "guide/interoperability/liana.md", "guide/interoperability/networkx.ipynb", "guide/interoperability/omnipath.ipynb", "guide/interoperability/picos.ipynb", "guide/intro/acyclic-flows.ipynb", "guide/intro/constrained-optimization.ipynb", "guide/intro/index.md", "guide/intro/multi-commodity-network-flows.ipynb", "guide/intro/prior-knowledge.ipynb", "guide/metabolism/flux-balance-analysis.ipynb", "guide/metabolism/imat.ipynb", "guide/metabolism/index.md", "guide/metabolism/multicondition-imat.ipynb", "guide/metabolism/multicondition-sfba.ipynb", "guide/metabolism/sparse-fba.ipynb", "guide/networks/index.md", "guide/networks/pcst.ipynb", "guide/networks/shortest-paths.ipynb", "guide/networks/steiner-trees.ipynb", "guide/signaling/carnival.ipynb", "guide/signaling/index.md", "guide/signaling/multicondition-carnival.ipynb", "index.md", "tutorials/context-specific-metabolic-omics.ipynb", "tutorials/index.md"], "indexentries": {"acyclicflow() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.AcyclicFlow", false]], "attr (class in corneto)": [[0, "corneto.Attr", false]], "attributes (class in corneto)": [[0, "corneto.Attributes", false]], "available_backends() (in module corneto)": [[0, "corneto.available_backends", false]], "available_solvers() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.available_solvers", false]], "available_solvers() (corneto.backend.cvxpybackend method)": [[1, "corneto.backend.CvxpyBackend.available_solvers", false]], "available_solvers() (corneto.backend.picosbackend method)": [[1, "corneto.backend.PicosBackend.available_solvers", false]], "backend (class in corneto.backend)": [[1, "corneto.backend.Backend", false]], "bfs_search() (in module corneto.methods.carnival)": [[2, "corneto.methods.carnival.bfs_search", false]], "binary (corneto.backend.vartype attribute)": [[1, "corneto.backend.VarType.BINARY", false]], "build() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.build", false]], "build() (corneto.backend.cvxpybackend method)": [[1, "corneto.backend.CvxpyBackend.build", false]], "build() (corneto.backend.picosbackend method)": [[1, "corneto.backend.PicosBackend.build", false]], "continuous (corneto.backend.vartype attribute)": [[1, "corneto.backend.VarType.CONTINUOUS", false]], "copy() (corneto.graph method)": [[0, "corneto.Graph.copy", false]], "corneto": [[0, "module-corneto", false]], "corneto.backend": [[1, "module-corneto.backend", false]], "corneto.methods": [[2, "module-corneto.methods", false]], "corneto.methods.carnival": [[2, "module-corneto.methods.carnival", false]], "corneto.methods.metabolism": [[3, "module-corneto.methods.metabolism", false]], "corneto.methods.metabolism.fba": [[3, "module-corneto.methods.metabolism.fba", false]], "corneto.methods.shortest_path": [[2, "module-corneto.methods.shortest_path", false]], "corneto.methods.signaling": [[2, "module-corneto.methods.signaling", false]], "corneto.methods.steiner": [[2, "module-corneto.methods.steiner", false]], "corneto.utils": [[4, "module-corneto.utils", false]], "create_exact_multi_steiner_tree() (in module corneto.methods.steiner)": [[2, "corneto.methods.steiner.create_exact_multi_steiner_tree", false]], "create_flow_graph() (in module corneto.methods.signaling)": [[2, "corneto.methods.signaling.create_flow_graph", false]], "custom_attr (corneto.attr attribute)": [[0, "corneto.Attr.CUSTOM_ATTR", false]], "cvxpybackend (class in corneto.backend)": [[1, "corneto.backend.CvxpyBackend", false]], "default_sign_loss() (in module corneto.methods.signaling)": [[2, "corneto.methods.signaling.default_sign_loss", false]], "directed (corneto.edgetype attribute)": [[0, "corneto.EdgeType.DIRECTED", false]], "edge_type (corneto.attr attribute)": [[0, "corneto.Attr.EDGE_TYPE", false]], "edgetype (class in corneto)": [[0, "corneto.EdgeType", false]], "evaluate_gpr_expression() (in module corneto.methods.metabolism)": [[3, "corneto.methods.metabolism.evaluate_gpr_expression", false]], "evaluate_gpr_rules() (in module corneto.methods.metabolism)": [[3, "corneto.methods.metabolism.evaluate_gpr_rules", false]], "exact_steiner_tree() (in module corneto.methods.steiner)": [[2, "corneto.methods.steiner.exact_steiner_tree", false]], "extract_subgraph() (corneto.graph method)": [[0, "corneto.Graph.extract_subgraph", false]], "fba_problem() (in module corneto.methods.metabolism.fba)": [[3, "corneto.methods.metabolism.fba.fba_problem", false]], "fbaproblem (class in corneto.methods.metabolism.fba)": [[3, "corneto.methods.metabolism.fba.FBAProblem", false]], "filter_graph() (corneto.graph method)": [[0, "corneto.Graph.filter_graph", false]], "flow() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.Flow", false]], "from_cobra_model() (corneto.graph static method)": [[0, "corneto.Graph.from_cobra_model", false]], "from_miom_model() (corneto.graph static method)": [[0, "corneto.Graph.from_miom_model", false]], "from_sif() (corneto.graph static method)": [[0, "corneto.Graph.from_sif", false]], "from_sif_tuples() (corneto.graph static method)": [[0, "corneto.Graph.from_sif_tuples", false]], "get_attr() (corneto.attributes method)": [[0, "corneto.Attributes.get_attr", false]], "get_edge() (corneto.graph method)": [[0, "corneto.Graph.get_edge", false]], "get_fluxes() (corneto.methods.metabolism.fba.fbaproblem method)": [[3, "corneto.methods.metabolism.fba.FBAProblem.get_fluxes", false]], "get_fluxes_dict() (corneto.methods.metabolism.fba.fbaproblem method)": [[3, "corneto.methods.metabolism.fba.FBAProblem.get_fluxes_dict", false]], "get_genes_from_gpr() (in module corneto.methods.metabolism)": [[3, "corneto.methods.metabolism.get_genes_from_gpr", false]], "get_graph_attributes() (corneto.graph method)": [[0, "corneto.Graph.get_graph_attributes", false]], "get_library_version() (in module corneto.utils)": [[4, "corneto.utils.get_library_version", false]], "get_result() (in module corneto.methods.carnival)": [[2, "corneto.methods.carnival.get_result", false]], "get_selected_edges() (in module corneto.methods.carnival)": [[2, "corneto.methods.carnival.get_selected_edges", false]], "get_symbols() (corneto.backend.backend static method)": [[1, "corneto.backend.Backend.get_symbols", false]], "get_unique_genes() (in module corneto.methods.metabolism)": [[3, "corneto.methods.metabolism.get_unique_genes", false]], "graph (class in corneto)": [[0, "corneto.Graph", false]], "has_attr() (corneto.attributes method)": [[0, "corneto.Attributes.has_attr", false]], "heuristic_carnival() (in module corneto.methods.carnival)": [[2, "corneto.methods.carnival.heuristic_carnival", false]], "hstack() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.hstack", false]], "import_optional_module() (in module corneto.utils)": [[4, "corneto.utils.import_optional_module", false]], "indicator() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.Indicator", false]], "indicators() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.Indicators", false]], "info() (in module corneto)": [[0, "corneto.info", false]], "integer (corneto.backend.vartype attribute)": [[1, "corneto.backend.VarType.INTEGER", false]], "is_available() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.is_available", false]], "linear_and() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.linear_and", false]], "linear_or() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.linear_or", false]], "module": [[0, "module-corneto", false], [1, "module-corneto.backend", false], [2, "module-corneto.methods", false], [2, "module-corneto.methods.carnival", false], [2, "module-corneto.methods.shortest_path", false], [2, "module-corneto.methods.signaling", false], [2, "module-corneto.methods.steiner", false], [3, "module-corneto.methods.metabolism", false], [3, "module-corneto.methods.metabolism.fba", false], [4, "module-corneto.utils", false]], "multicondition_imat() (in module corneto.methods.metabolism.fba)": [[3, "corneto.methods.metabolism.fba.multicondition_imat", false]], "nonzeroindicator() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.NonZeroIndicator", false]], "parameter() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.Parameter", false]], "parameter() (corneto.backend.cvxpybackend method)": [[1, "corneto.backend.CvxpyBackend.Parameter", false]], "parameter() (corneto.backend.picosbackend method)": [[1, "corneto.backend.PicosBackend.Parameter", false]], "picosbackend (class in corneto.backend)": [[1, "corneto.backend.PicosBackend", false]], "problem() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.Problem", false]], "reachability_graph() (in module corneto.methods.carnival)": [[2, "corneto.methods.carnival.reachability_graph", false]], "read_dataset() (in module corneto.methods.carnival)": [[2, "corneto.methods.carnival.read_dataset", false]], "reverse() (corneto.graph method)": [[0, "corneto.Graph.reverse", false]], "runinversecarnival() (in module corneto.methods.carnival)": [[2, "corneto.methods.carnival.runInverseCarnival", false]], "runvanillacarnival() (in module corneto.methods.carnival)": [[2, "corneto.methods.carnival.runVanillaCarnival", false]], "set_attr() (corneto.attributes method)": [[0, "corneto.Attributes.set_attr", false]], "shortest_path() (in module corneto.methods.shortest_path)": [[2, "corneto.methods.shortest_path.shortest_path", false]], "signflow() (in module corneto.methods.signaling)": [[2, "corneto.methods.signaling.signflow", false]], "signflow_constraints() (in module corneto.methods.signaling)": [[2, "corneto.methods.signaling.signflow_constraints", false]], "solve() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.solve", false]], "solve_shortest_path() (in module corneto.methods.shortest_path)": [[2, "corneto.methods.shortest_path.solve_shortest_path", false]], "source_attr (corneto.attr attribute)": [[0, "corneto.Attr.SOURCE_ATTR", false]], "target_attr (corneto.attr attribute)": [[0, "corneto.Attr.TARGET_ATTR", false]], "undirected (corneto.edgetype attribute)": [[0, "corneto.EdgeType.UNDIRECTED", false]], "value (corneto.attr attribute)": [[0, "corneto.Attr.VALUE", false]], "variable() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.Variable", false]], "variable() (corneto.backend.cvxpybackend method)": [[1, "corneto.backend.CvxpyBackend.Variable", false]], "variable() (corneto.backend.picosbackend method)": [[1, "corneto.backend.PicosBackend.Variable", false]], "vartype (class in corneto.backend)": [[1, "corneto.backend.VarType", false]], "version() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.version", false]], "vstack() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.vstack", false]], "xor() (corneto.backend.backend method)": [[1, "corneto.backend.Backend.Xor", false]]}, "objects": {"": [[0, 0, 0, "-", "corneto"]], "corneto": [[0, 1, 1, "", "Attr"], [0, 1, 1, "", "Attributes"], [0, 1, 1, "", "EdgeType"], [0, 1, 1, "", "Graph"], [0, 4, 1, "", "available_backends"], [1, 0, 0, "-", "backend"], [0, 4, 1, "", "info"], [2, 0, 0, "-", "methods"], [4, 0, 0, "-", "utils"]], "corneto.Attr": [[0, 2, 1, "", "CUSTOM_ATTR"], [0, 2, 1, "", "EDGE_TYPE"], [0, 2, 1, "", "SOURCE_ATTR"], [0, 2, 1, "", "TARGET_ATTR"], [0, 2, 1, "", "VALUE"]], "corneto.Attributes": [[0, 3, 1, "", "get_attr"], [0, 3, 1, "", "has_attr"], [0, 3, 1, "", "set_attr"]], "corneto.EdgeType": [[0, 2, 1, "", "DIRECTED"], [0, 2, 1, "", "UNDIRECTED"]], "corneto.Graph": [[0, 3, 1, "", "copy"], [0, 3, 1, "", "extract_subgraph"], [0, 3, 1, "", "filter_graph"], [0, 3, 1, "", "from_cobra_model"], [0, 3, 1, "", "from_miom_model"], [0, 3, 1, "", "from_sif"], [0, 3, 1, "", "from_sif_tuples"], [0, 3, 1, "", "get_edge"], [0, 3, 1, "", "get_graph_attributes"], [0, 3, 1, "", "reverse"]], "corneto.backend": [[1, 1, 1, "", "Backend"], [1, 1, 1, "", "CvxpyBackend"], [1, 1, 1, "", "PicosBackend"], [1, 1, 1, "", "VarType"]], "corneto.backend.Backend": [[1, 3, 1, "", "AcyclicFlow"], [1, 3, 1, "", "Flow"], [1, 3, 1, "", "Indicator"], [1, 3, 1, "", "Indicators"], [1, 3, 1, "", "NonZeroIndicator"], [1, 3, 1, "", "Parameter"], [1, 3, 1, "", "Problem"], [1, 3, 1, "", "Variable"], [1, 3, 1, "", "Xor"], [1, 3, 1, "", "available_solvers"], [1, 3, 1, "", "build"], [1, 3, 1, "", "get_symbols"], [1, 3, 1, "", "hstack"], [1, 3, 1, "", "is_available"], [1, 3, 1, "", "linear_and"], [1, 3, 1, "", "linear_or"], [1, 3, 1, "", "solve"], [1, 3, 1, "", "version"], [1, 3, 1, "", "vstack"]], "corneto.backend.CvxpyBackend": [[1, 3, 1, "", "Parameter"], [1, 3, 1, "", "Variable"], [1, 3, 1, "", "available_solvers"], [1, 3, 1, "", "build"]], "corneto.backend.PicosBackend": [[1, 3, 1, "", "Parameter"], [1, 3, 1, "", "Variable"], [1, 3, 1, "", "available_solvers"], [1, 3, 1, "", "build"]], "corneto.backend.VarType": [[1, 2, 1, "", "BINARY"], [1, 2, 1, "", "CONTINUOUS"], [1, 2, 1, "", "INTEGER"]], "corneto.methods": [[2, 0, 0, "-", "carnival"], [3, 0, 0, "-", "metabolism"], [2, 0, 0, "-", "shortest_path"], [2, 0, 0, "-", "signaling"], [2, 0, 0, "-", "steiner"]], "corneto.methods.carnival": [[2, 4, 1, "", "bfs_search"], [2, 4, 1, "", "get_result"], [2, 4, 1, "", "get_selected_edges"], [2, 4, 1, "", "heuristic_carnival"], [2, 4, 1, "", "reachability_graph"], [2, 4, 1, "", "read_dataset"], [2, 4, 1, "", "runInverseCarnival"], [2, 4, 1, "", "runVanillaCarnival"]], "corneto.methods.metabolism": [[3, 4, 1, "", "evaluate_gpr_expression"], [3, 4, 1, "", "evaluate_gpr_rules"], [3, 0, 0, "-", "fba"], [3, 4, 1, "", "get_genes_from_gpr"], [3, 4, 1, "", "get_unique_genes"]], "corneto.methods.metabolism.fba": [[3, 1, 1, "", "FBAProblem"], [3, 4, 1, "", "fba_problem"], [3, 4, 1, "", "multicondition_imat"]], "corneto.methods.metabolism.fba.FBAProblem": [[3, 3, 1, "", "get_fluxes"], [3, 3, 1, "", "get_fluxes_dict"]], "corneto.methods.shortest_path": [[2, 4, 1, "", "shortest_path"], [2, 4, 1, "", "solve_shortest_path"]], "corneto.methods.signaling": [[2, 4, 1, "", "create_flow_graph"], [2, 4, 1, "", "default_sign_loss"], [2, 4, 1, "", "signflow"], [2, 4, 1, "", "signflow_constraints"]], "corneto.methods.steiner": [[2, 4, 1, "", "create_exact_multi_steiner_tree"], [2, 4, 1, "", "exact_steiner_tree"]], "corneto.utils": [[4, 4, 1, "", "get_library_version"], [4, 4, 1, "", "import_optional_module"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "terms": {"": [2, 10, 12, 13, 14, 16, 17, 21, 22, 23, 30, 31, 32, 35], "0": [0, 1, 2, 3, 9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "00": [10, 16, 18, 20, 31, 32], "000000": 36, "0000000000000002": 16, "000000e": [18, 32], "0000e": [10, 16], "0001": [1, 3], "0001e": 16, "000e": [10, 32], "001": [1, 2, 3], "0046e": 16, "0098e": 16, "00e": 10, "01": [2, 3, 10, 16, 31, 32], "017371": 36, "02": [10, 16, 18, 20, 31, 32], "020531": 36, "0279": 22, "03": [10, 16, 18, 20, 31, 32], "030984": 36, "0348e": 16, "04": [10, 16], "043172": 36, "05": [10, 16], "06": [2, 10, 16, 32], "07": 16, "0709": 22, "08": [10, 16, 18, 20, 31, 32], "085208": 36, "089110": 36, "09": 16, "0a0": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "0e": 10, "0x7f6b65c15590": 22, "0x7f6b65c5a150": 22, "0x7fe662191b10": 18, "0x7fe6acb80590": 18, "1": [0, 1, 2, 3, 9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 27, 29, 30, 31, 32, 35, 36], "10": [1, 2, 10, 16, 17, 18, 20, 22, 29, 30, 31, 32, 36], "100": 23, "1000": [9, 20, 22], "10000": 10, "1003": 23, "100e": 31, "101": 36, "1010": 23, "11": [18, 23, 30, 32, 36], "110": [18, 20], "116122": 36, "118": 32, "1182": [22, 32], "12": [10, 16, 18, 20, 32, 36], "120": 18, "125": 18, "129": 22, "12e": 10, "13": [18, 22, 32], "130": 18, "131": 36, "13157": 32, "132": [32, 36], "133": 36, "134": 36, "135": 36, "136": 36, "14": [17, 32], "1401e": 16, "144573": 36, "145": [31, 32], "147": [18, 22, 32], "14e": 10, "15": [18, 20, 32], "150": 10, "1500": 32, "151": 32, "155": [31, 32], "1568e": 16, "16": [16, 20, 27, 32], "164": 18, "17": [16, 18, 36], "176739": 36, "1784k": 32, "17default": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "18": [18, 20, 30, 32], "189": 18, "19": [18, 32], "190": 20, "197": 32, "1980": 31, "1e": [2, 16, 17, 23, 27, 36], "2": [0, 2, 14, 16, 17, 18, 20, 21, 22, 27, 30, 31, 32, 36], "20": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "200000e": 32, "2007": 30, "2008": 23, "201019": 36, "2016": 22, "2019": 32, "2020": 35, "2021": 10, "205": 22, "21": [10, 18, 20], "210": 18, "211265": 36, "22": [18, 20], "2220e": 10, "2287": 32, "229419": 36, "23": [31, 32], "230": 18, "235511": 36, "24": 20, "25": [10, 32], "255": 32, "2557": 22, "256": 18, "26": [16, 18, 23, 32], "263878": 36, "265e": 10, "27": 32, "270161": 36, "274": 18, "276": 18, "28": [18, 32], "29": 18, "299068": 36, "29999999901748486": 16, "2e": 16, "3": [9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "30": [10, 18, 20, 36], "30000000000000004": 10, "30000000000000e": 32, "300000e": 32, "3020e": 16, "31": [10, 18], "310": 31, "311979": 36, "312": 18, "312e": 18, "315524": 36, "316": 32, "317967": 36, "32": [18, 20, 32], "321175": 36, "323": 18, "33": [18, 32], "331147": 36, "335597": 36, "336e": 31, "338372": 36, "34": [31, 32], "35": 18, "36": [18, 32, 36], "360": 18, "360426": 36, "361": 22, "362138": 36, "37": 32, "38": [18, 32], "380e": 31, "387545": 36, "389": 18, "39": [18, 32], "3e": 16, "3pg_c": 22, "3repositori": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "4": [9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "40": [20, 31, 32], "4020e": 16, "41": [20, 31, 32], "42": [18, 27, 32], "423e": 20, "425459": 36, "43": 18, "431": 18, "431005": 36, "432": 18, "434945": 36, "437554": 36, "44": 18, "45": [31, 32], "46": [18, 32], "47": [18, 32], "478e": 31, "48": [18, 32], "483": 32, "4851": 30, "490210": 36, "4931": 32, "496": 22, "4e": 16, "5": [9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "50": [18, 20, 31], "5000": 30, "500000e": 32, "51": 31, "510611": 36, "514": 18, "518896": 36, "5191": 22, "52": 18, "522697129004221": 30, "53": [10, 16, 32], "53400000000000e": 18, "534e": 18, "54": 32, "547": 22, "55": [10, 16, 18], "56": 18, "562963": 36, "57": [10, 16], "571045": 36, "5789": 32, "58": [10, 16], "581649": 36, "59": [18, 22, 36], "595203": 36, "5e": 16, "6": [10, 16, 18, 20, 21, 22, 23, 27, 32, 36], "60": [10, 36], "600": 18, "600000e": 32, "61": 32, "63": 18, "64": [18, 32], "647255": 36, "65": 18, "66": [18, 32], "67": 18, "670": [18, 31], "674179": 36, "676129": 36, "67e": 10, "68": 32, "680": 31, "685851": 36, "68e": 10, "7": [10, 14, 16, 17, 18, 31, 32, 36], "70": [18, 20], "7000": 10, "701411": 36, "70e": 10, "71": [10, 16, 18], "72": [9, 22, 27], "726687": 36, "73": [18, 30], "730e": 31, "733450": 36, "7478": 22, "75": 32, "7534": 18, "76": [10, 16], "767118": 36, "77": 36, "772e": 10, "77e": 10, "78": 18, "7867": 22, "788094": 36, "79": [10, 16, 18], "8": [10, 14, 18, 20, 30, 32, 36], "80": [18, 20], "81": [18, 22], "813589": 36, "81e": 10, "822822": 36, "825172": 36, "827751": 36, "829e": 32, "829k": 20, "82e": 10, "83": 18, "8328": 22, "84": 18, "841818": 36, "85": 18, "850": 18, "86": [18, 32], "865e": 18, "87": 18, "8739215069684303": [22, 27], "874": 22, "885833": 36, "892": 18, "8977": 22, "898471": 36, "8e": 16, "9": [10, 18, 23, 32, 36], "90000000000000e": 20, "900000e": 20, "900e": 20, "902372": 36, "905e": 32, "91": 36, "92": [10, 16, 18], "93": 18, "94": 18, "9414": 22, "95": [9, 22, 27, 32], "951773": 35, "956686": 36, "959e": 20, "95e": 10, "965193": 35, "96e": 10, "979178": 36, "98": [10, 16], "9994e": 10, "999999999999986": 31, "9_": 3, "A": [2, 3, 7, 10, 12, 14, 19, 20, 21, 22, 29, 30, 31, 33], "As": [16, 17], "By": [17, 18, 21, 27, 30, 31], "For": [11, 13, 17, 21, 22, 31, 32], "If": [2, 10, 17, 18, 20, 27, 31, 32, 35], "In": [17, 20, 21, 22, 23, 24, 29, 30, 31], "It": [7, 9, 10, 11, 13, 14, 15, 17, 18, 20, 21, 22, 31, 32], "Not": 17, "On": [14, 18], "One": [13, 21, 31], "Such": 31, "The": [1, 2, 7, 12, 14, 17, 19, 20, 21, 22, 23, 29, 31, 32, 35], "Then": [17, 31], "These": [13, 17, 20, 21, 22, 31, 32], "To": [17, 31, 35], "With": [17, 31], "_": [17, 29, 32], "__": 21, "__custom_attr": 0, "__edge_typ": [0, 9, 21, 22], "__source_attr": [0, 9, 21, 22], "__target_attr": [0, 9, 21, 22], "__valu": [0, 9, 21, 22], "_and": 3, "_base": [10, 16, 18, 27], "_csr": 1, "_cvxpy_backend": 2, "_dag_layer_po": 17, "_flow": [1, 2, 17, 20, 23, 27, 31, 32, 36], "_flow_i": [29, 31], "_flow_ineg": [17, 36], "_flow_ipo": [17, 32, 36], "_graph": [29, 31], "_i": 1, "_ineg": 1, "_ipo": 1, "_meas_c0": 32, "_or": [3, 23, 36], "_pert_c0": 32, "_picos_backend": 16, "_t": 32, "_xor": 1, "ab": [27, 36], "abc": 1, "abil": [17, 18], "abl1": 32, "about": [13, 14, 21, 23, 31], "abov": 23, "absolut": 32, "abstract": 1, "academ": 35, "acald": 9, "acald_c": 9, "accept": 31, "access": [10, 18, 21], "accoa_c": [9, 22], "accomplish": 23, "accord": 31, "account": [11, 20], "accumul": 22, "accur": [17, 23], "acetyl": 22, "achiev": [17, 31], "across": [17, 20, 22], "action": 32, "activ": [2, 7, 12, 17, 23, 32], "activa": 32, "acycl": [7, 19, 31], "acyclicflow": [0, 1, 17], "ad": [17, 18, 20, 21, 30, 31, 32], "adapt": [10, 16, 21, 30, 31], "add": [14, 17, 18, 20, 21, 27, 30, 31, 32], "add_edg": [0, 14, 17, 20, 21, 23, 29, 30, 31], "add_nodes_from": 14, "add_object": [10, 16, 17, 20, 22, 27], "addit": [1, 17, 21, 31], "addition": [10, 21], "address": [22, 23], "adjust": 10, "adp_c": 22, "advanc": [9, 22, 30, 31], "aebp1": 32, "affin": [16, 17, 18, 20, 23, 27, 32, 36], "affineexpress": 16, "after": [17, 18, 32], "agreement": 35, "aid": 31, "aim": [18, 20, 32], "akg_c": 22, "al": [23, 32], "algebra": 16, "algorithm": [14, 21, 30, 31, 32], "alias": 17, "alias_flow": 1, "alias_flow_ineg": 1, "alias_flow_ipo": 1, "alias_nonzero_flow": 1, "align": [18, 23], "all": [0, 7, 12, 14, 18, 29, 31], "alloc": 20, "allow": [10, 11, 12, 16, 21, 22, 30, 31], "alpha": [3, 9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "alreadi": [17, 21], "also": [12, 16, 17, 18, 21, 22, 23, 30, 31, 32], "alter": 32, "altern": [31, 32], "alwai": [23, 30, 31, 32], "among": 18, "amount": 20, "an": [1, 2, 7, 10, 12, 14, 17, 18, 21, 22, 23, 29, 30, 31, 32], "analog": 31, "analys": 13, "analysi": [7, 9, 12, 15, 21, 23, 24, 30, 31], "analyz": 14, "ananth": 22, "ani": [0, 1, 2, 7, 11, 16, 18, 19, 21, 22, 27, 30, 31, 32], "annot": 22, "anoth": [17, 30], "api": [14, 16, 21, 32, 35], "append": 17, "appli": [10, 16, 18, 20, 31, 32], "applic": [7, 16, 20, 31, 32], "approach": [17, 21, 30, 31], "appropri": 10, "approxim": [31, 32], "ar": [2, 11, 12, 13, 17, 18, 20, 21, 22, 23, 27, 30, 31, 32], "areejit": 22, "aren": 31, "arg_list": 1, "argmin": 29, "around": 21, "arrai": [1, 10, 14, 16, 18, 20, 23, 32, 36], "arriv": 31, "arrow": 23, "articl": 32, "artifact": 17, "assess": 9, "associ": [13, 23, 27, 29], "assumpt": [23, 30, 31], "astyp": 36, "atp": 22, "atp_c": 22, "attach": 30, "attr": [0, 5, 6, 21], "attribut": [0, 2, 5, 6, 7, 18, 19, 20], "augment": [17, 31], "automat": [14, 16, 17, 18, 21, 27], "avail": [9, 10, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "available_backend": [0, 5, 6], "available_solv": [0, 1], "ax": 36, "axi": [1, 20], "b": [3, 10, 14, 16, 20, 21, 29, 30, 36], "b0008": 36, "b0114": 36, "b0115": 36, "b0116": 36, "b0118": 36, "b0351": 9, "b1241": 9, "b4153": 36, "b4154": 36, "b4232": 36, "b4301": 36, "b4395": 36, "back": 17, "backend": [0, 2, 3, 5, 6, 9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "backend_opt": 2, "backpack": 18, "balanc": [7, 9, 24], "banjac": 10, "barabasi_albert_graph": 30, "bartolomeo": 10, "base": [0, 1, 3, 7, 11, 12, 13, 16, 17, 21, 22, 23, 35], "basegraph": [0, 1, 2, 3], "basi": 22, "basic": [14, 18, 21, 22], "bayesian": 17, "becaus": [17, 23], "been": [17, 31], "befor": [17, 18, 31], "begin": [17, 18], "behavior": 23, "behind": 12, "bellman": 30, "benefit": 10, "best": [18, 30, 31], "betaweight": [2, 32], "better": [14, 17, 31], "between": [10, 14, 17, 21, 29, 30, 31], "beyond": 14, "bfs_search": [0, 2], "bi": 17, "bigger": 32, "bin": [20, 32, 36], "binari": [0, 1, 17, 18, 27, 29, 31], "biolog": [7, 12, 15, 17, 23, 31, 33, 35], "biologi": [18, 22, 32], "biomass": [22, 27], "biomass_ecoli_cor": [22, 27], "biomass_rxn": 22, "biomedicin": 35, "biosystem": 22, "biotechnologi": 23, "block": [7, 17, 22, 27, 32], "bool": [0, 1, 2, 3], "boolean": [17, 18, 23, 27, 31, 32, 36], "both": [7, 10, 13, 14, 17, 18, 21, 31, 32, 35], "bound": [1, 17, 18, 20, 22, 27, 32], "bound0": 22, "bound1000": 22, "boundari": [0, 1, 18], "broader": 31, "build": [0, 1, 7, 13, 14, 16, 17, 21, 22, 27, 30, 32], "built": 17, "c": [10, 18, 20, 21, 29, 30], "c0": 2, "c1": 20, "c2": 20, "c_e": 29, "c_input": 32, "c_output": 32, "call": 31, "callabl": [0, 1], "can": [1, 2, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 35], "cannot": [2, 17, 30, 32], "canonic": [10, 18, 20, 31, 32], "capabl": [12, 13, 23, 31], "capac": [18, 20, 22], "care": 16, "carniv": [0, 5, 6, 7, 17, 33], "carnival_exampl": 32, "carri": 17, "case": [12, 17, 30, 31], "catalyz": 23, "categor": 2, "categori": 23, "cater": 14, "causal": [17, 21, 32], "ccc": 13, "cdk1": 32, "cell": [7, 12], "cellular": 13, "center": [23, 36], "central": 21, "certain": [22, 23, 31], "cexpress": 1, "chain": [10, 18, 20, 31, 32], "challeng": [10, 23, 31, 33], "chang": [17, 18, 20, 21, 22, 32], "check": [31, 32], "check_termin": 10, "chg": [18, 32], "choic": [30, 31], "choos": [10, 16, 29], "circular": 23, "claim": 16, "clarabel": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "class": [0, 1, 3, 14, 21], "classif": 23, "classifi": 23, "cliqu": [18, 20, 32], "clq": [18, 32], "cn": [5, 9, 10, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "coa": 22, "coa_c": [9, 22], "cobra": [9, 22, 27, 36], "cobramodel": 0, "cobrapi": [7, 12, 24], "code": [23, 31], "coeff": [18, 32], "coeffici": [18, 20, 22, 32], "collect": [7, 28], "collectri": 32, "color": 23, "column": [2, 20, 22, 36], "column_ord": 0, "com": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "combinatori": [17, 31], "command": 35, "commerci": [10, 16], "commod": [7, 19], "common": [18, 21], "commun": [7, 12], "compar": [22, 31, 32], "comparison": 22, "compil": [10, 18, 20, 31, 32], "compl": [20, 32], "complet": 32, "complex": [7, 12, 14, 19, 21, 22, 33, 35], "compliant": [10, 18, 20, 31, 32], "compon": 32, "comprehens": [16, 21], "comput": [14, 20, 22, 23, 32, 35], "computation": 31, "con": [20, 32], "concentr": 22, "concept": [17, 22, 31], "condit": [2, 7, 13, 17, 22, 23, 24, 33], "conelp": 16, "conematrixstuf": [18, 20, 31, 32], "conf": [20, 32], "confirm": 31, "conflict": 32, "conic": [7, 12], "connect": [20, 21, 29, 31], "consid": [10, 17, 18, 20, 22, 31, 32], "consist": [20, 23, 32], "conss": [18, 32], "constant": [20, 23, 27, 36], "constrain": [7, 17, 19, 30], "constraint": [1, 7, 10, 12, 18, 20, 22, 23, 27, 31, 32, 35], "construct": [17, 21, 32], "constructor": 17, "consum": 22, "consumpt": 22, "cont": [20, 32], "contain": [2, 11, 17, 22, 31], "content": 6, "context": [7, 22, 24, 37], "contextu": [24, 32, 33], "contextualis": [7, 35], "continu": [0, 1, 2, 17, 18, 23, 27], "contrib": 14, "contribut": 32, "control": 32, "conveni": 16, "convent": 21, "convers": 21, "convert": [14, 16, 17, 30, 31, 32], "convex": [7, 12, 16], "coordin": 13, "copi": [0, 5, 6, 17], "cornerston": 18, "corneto": [7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36], "corneto_graph_to_networkx": 14, "correl": 23, "correspond": [23, 32], "cost": [29, 31], "could": 17, "cplex": 32, "cpp": [10, 18, 20, 31, 32], "creat": [0, 1, 7, 14, 17, 19, 20, 22, 27, 28, 29, 31, 32, 35], "create_exact_multi_steiner_tre": [0, 2], "create_flow_graph": [0, 2], "create_nonzero_ind": 1, "create_random_graph": [30, 31], "create_reaction_ind": 3, "creation": 14, "creb3": 32, "crebbp": 32, "criteria": 23, "critic": 13, "crk": 32, "crucial": [23, 31], "csr_arrai": 1, "csv": 2, "csymbol": 1, "curat": 15, "custom": [9, 27, 31], "custom_attr": [0, 5, 6], "custom_edge_attr": [22, 23, 27, 32], "custom_vertex_attr": 32, "cut": [20, 32], "cvxattr2constr": [10, 18, 20, 31, 32], "cvxopt": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "cvxoptsolv": 16, "cvxpy": [7, 9, 12, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "cvxpy_model": 10, "cvxpybackend": [0, 1, 2, 10], "cvxpyinstal": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "cycl": [17, 30, 32], "d": [20, 21, 22, 29, 30], "dag": [2, 7, 19], "dag_layer_position_c0": 32, "data": [2, 8, 10, 11, 12, 13, 14, 17, 18, 20, 23, 31, 32, 33, 35, 37], "databas": 15, "datafram": [20, 32, 36], "dataset": [2, 13, 23, 24], "dcost": 16, "dcp": [10, 18, 20, 31, 32], "dcp2cone": [18, 20, 31, 32], "decid": [17, 31, 35], "deciph": 32, "decis": 18, "decod": 13, "decoupl": [7, 10, 12, 32], "dedic": 30, "def": [30, 31], "default": [0, 1, 17, 18, 21, 22], "default_edge_typ": 0, "default_lb": [9, 22, 23], "default_sign_loss": [0, 2], "default_solv": 1, "default_ub": [9, 22, 23], "default_valu": 3, "defin": [1, 2, 10, 16, 17, 22, 29, 31, 32], "definit": 17, "del": [18, 32], "delet": [18, 20, 32], "delimit": 0, "demonstr": 31, "denot": [2, 23], "depend": [7, 12, 17, 23, 35], "deplet": 22, "deprecatedbackend": [3, 18], "depth": 21, "deregul": [13, 32], "deriv": 32, "design": [7, 14, 21, 30, 35], "despit": 14, "detect": 32, "determin": [10, 17, 23], "develop": [7, 12, 14, 18, 21, 31, 35], "df_expr": 36, "df_result": 20, "df_sol": 36, "diamond": 23, "dict": [0, 1, 2, 3], "dict_data": 32, "dictionari": 2, "differ": [7, 10, 11, 14, 16, 17, 18, 20, 21, 22, 23, 29, 31, 32], "differenti": 2, "difficult": 31, "dijkstra": [21, 30], "dimens": 22, "direct": [0, 1, 5, 6, 9, 14, 17, 18, 20, 21, 22, 30, 31, 32], "directli": [17, 23], "discard_self_loop": 0, "disciplin": 18, "discoveri": 17, "discret": 23, "diseas": [13, 31, 32], "displai": 2, "distanc": 31, "distribut": [22, 23], "divers": [7, 13, 21], "do": [17, 31], "document": 13, "doe": 18, "doesn": [22, 23, 30], "domain": [14, 18], "don": 31, "done": 30, "dorothea": 32, "dot": [18, 23], "down": 32, "downregul": 23, "downstream": [13, 32], "dqcp": [10, 18, 20, 31, 32], "draw": [23, 31], "dre": 16, "driven": [13, 35], "drug": [31, 32], "dry": 22, "dtype": 36, "dua": 10, "dual": [18, 20, 21, 32], "dualbound": [20, 32], "due": [18, 31, 33], "dummi": 17, "dure": 16, "dynam": 32, "e": [1, 16, 20, 21, 27, 29, 30, 31, 32, 36], "e1": 23, "e2": 23, "e3": 23, "e4": 23, "e4p_c": 22, "e5": 23, "e6": 23, "e7": 23, "each": [2, 18, 20, 22, 23, 29], "earli": 31, "early_stop": 2, "eas": 21, "easili": [7, 18, 30, 35], "eco": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "ecoli_cor": 36, "ecoli_example_data": 36, "ecos_bb": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "edg": [0, 2, 7, 14, 17, 19, 20, 29, 30, 31, 32], "edge_styl": 32, "edge_subgraph": [17, 23, 29, 30, 31, 32], "edge_typ": [0, 5, 6], "edge_valu": 32, "edge_values_c0": 32, "edge_var": 32, "edge_weight": 2, "edge_weights_per_condit": 2, "edges_r": 31, "edgetyp": [0, 5, 6, 21, 29, 31], "effect": 32, "effici": [10, 17, 20], "egfr": 32, "egg": 35, "egr3": 32, "either": [2, 17, 31], "element": 31, "elk1": 32, "els": 31, "emploi": [7, 31], "enabl": [13, 31], "encod": [17, 21, 23], "end": [7, 17, 18, 35], "enforc": 31, "engin": [18, 22], "ensembl": [7, 12], "ensur": [12, 16, 21, 22], "entri": 22, "enum": [0, 1], "enumer": 31, "enzym": [22, 23], "enzymat": 23, "ep": [2, 3], "eps_ab": 10, "eps_dual_inf": 10, "eps_prim_inf": 10, "eps_rel": 10, "equal": [20, 22, 23, 27, 32, 36], "equat": 17, "equival": [17, 20, 31], "erbb2": 32, "erdos_renyi_graph": 31, "error": [17, 32], "erythros": 22, "especi": [23, 30], "essenc": 23, "establish": 13, "estim": 10, "et": [23, 32], "etc": [30, 32], "etyp": 31, "eu": 35, "european": 35, "evalu": [9, 14], "evaluate_gpr_express": [2, 3, 36], "evaluate_gpr_rul": [2, 3], "even": [21, 22, 29, 31, 32], "event": 13, "everi": [22, 23, 31], "everyon": [7, 12], "everytim": 14, "ex_ac_b": 36, "ex_akg_b": 36, "ex_co2_b": 36, "ex_etoh_b": 36, "ex_for_b": 36, "exact": [7, 28], "exact_steiner_tre": [0, 2, 29, 31], "exampl": [0, 2, 7, 11, 14, 17, 18, 20, 21, 22, 23, 27, 30, 31, 33, 35], "exce": 18, "exclud": [29, 31], "exclude_dummi": 2, "exhaust": [18, 20, 32], "exist": 31, "exp_affin": 16, "expand": 12, "expand_output": 2, "expect": [2, 13, 23], "experi": [10, 17, 23], "experiment": 10, "explor": [17, 20, 31], "expr": [17, 18, 20, 22, 23, 27, 32, 36], "express": [1, 2, 10, 16, 17, 18, 20, 23, 24, 27, 32, 36], "extend": [7, 13, 17, 35], "extens": [10, 12, 14, 31], "extra": [17, 31, 32], "extract": [2, 11, 17], "extract_subgraph": [0, 5, 6], "extraopt": 16, "f": [14, 17, 18, 21, 29, 30], "f6p_c": 22, "facilit": [21, 23], "factor": [11, 22, 32], "fals": [0, 1, 2, 3, 17, 23, 30, 31, 32], "fast": [7, 18, 20, 22, 31, 33], "fast_carniv": 32, "faster": 32, "fba": [0, 2, 7, 23, 24, 36], "fba_problem": [2, 3, 22, 27], "fbaproblem": [2, 3], "fdp": [22, 27], "feasibl": [16, 17, 18, 31], "featur": [11, 16], "few": [21, 31], "field": 20, "figur": [18, 22, 23, 32], "file": [2, 21], "filenotfounderror": 2, "filter_edg": 0, "filter_graph": [0, 5, 6], "filter_vertex": 0, "final": [20, 32], "final_dict": 2, "find": [7, 8, 17, 18, 22, 23, 29, 30, 31], "finish": [10, 18, 20, 31, 32], "first": [10, 14, 17, 18, 20, 23, 31, 32], "fit": 32, "fix": [20, 32], "flexibl": [7, 10, 14, 16, 17, 21, 30, 31, 32], "flexibli": 11, "flipobject": 18, "float": [1, 2], "flow": [0, 1, 2, 7, 19, 22, 23, 27, 30, 31, 32, 36], "flow_edg": 17, "flow_implies_sign": 2, "flow_nam": 2, "flow_styl": [22, 23, 27], "floyd": 30, "flux": [7, 9, 23, 24, 36], "focu": 14, "follow": [10, 18, 20, 22, 23, 31, 32, 35], "footprint": 32, "foral": 18, "ford": 30, "forest": 7, "form": [18, 21], "format": [10, 16, 21], "formul": [10, 18, 30], "fosl2": 32, "found": [2, 16, 18, 20, 32], "foxa3": 32, "foxe1": 32, "framework": [7, 11, 12, 18, 21, 30, 35], "framwork": 18, "free": [17, 21, 35], "frequent": 9, "from": [2, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 35, 37], "from_cobra_model": [0, 5, 6, 9, 22, 27, 36], "from_miom_model": [0, 5, 6], "from_networkx": 30, "from_sif": [0, 5, 6], "from_sif_fil": 21, "from_sif_tupl": [0, 5, 6, 21, 32], "frozenset": [0, 9, 21], "fructos": 22, "func_and": 3, "func_or": 3, "function": [2, 3, 14, 16, 17, 18, 20, 21, 22, 30, 31, 32], "fundament": 31, "further": 1, "futur": 21, "g": [1, 2, 3, 9, 14, 17, 20, 21, 22, 27, 29, 30, 31, 32, 36], "g3p_c": 22, "g6p_c": 22, "g_c": 21, "g_ex": 17, "g_nx": 14, "g_sol": 32, "g_steiner": 31, "gain": 31, "gam": 22, "gap": [16, 18, 20, 32], "gc": [14, 29, 30, 32], "gcn": 14, "gdw": 22, "gear": 14, "gem": [22, 23, 36], "gene": [8, 9, 11, 22, 23, 24, 31, 32, 36], "gener": [14, 17, 21, 29, 30, 31, 32], "genom": [7, 9, 21, 22, 23], "get": [7, 17, 18, 23, 31, 32], "get_attr": [0, 5, 6, 21], "get_attr_edg": [9, 21, 22, 23], "get_attr_from_edg": [20, 36], "get_by_id": 22, "get_edg": [0, 5, 6, 9, 21], "get_edges_by_attr": [21, 22, 27], "get_flux": [2, 3], "get_fluxes_dict": [2, 3], "get_genes_from_gpr": [2, 3], "get_graph_attribut": [0, 5, 6], "get_library_vers": [0, 4], "get_result": [0, 2, 32], "get_selected_edg": [0, 2, 32], "get_symbol": [0, 1], "get_unique_gen": [2, 3, 36], "gex": 32, "gf": 32, "git": 35, "github": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "give": [16, 32], "given": [7, 18, 19, 21, 23, 31], "gjerga": 32, "gln__l_c": 22, "glpk": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "glpk_mi": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "glu__l_c": 22, "glucos": 22, "glycer": 22, "glyceraldehyd": 22, "go": [17, 23, 27], "goal": [18, 31], "good": [31, 32], "googl": 18, "goran": 10, "gp": 17, "gpr": [3, 9, 22, 23, 36], "gpr_express": 3, "gpr_field": 3, "gram": 22, "grammar": [10, 18, 20, 31, 32], "graph": [0, 1, 2, 3, 5, 6, 7, 9, 14, 17, 19, 20, 22, 23, 27, 28, 29, 31, 32, 36], "graph_attr": 23, "graphic": 17, "graphproblem": 17, "greater": 17, "greedi": 32, "green": 23, "ground": 23, "group": 32, "growth": 22, "guarante": [17, 31], "guid": 35, "gurobi": [32, 35], "gurobipi": 35, "h": [22, 29], "h2o_c": 22, "h_c": [9, 22], "ha": [10, 14, 17, 18, 20, 23, 29, 31, 32], "hand": [14, 18, 21], "handl": [17, 18, 21, 30, 32], "hard": 31, "harmoni": 23, "has_attr": [0, 5, 6], "has_head": 0, "have": [16, 17, 18, 21, 30, 31, 35], "heidelberg": [7, 35], "help": 31, "here": [12, 14, 17, 18, 20, 21, 22], "heur": [20, 32], "heurist": [7, 18, 28, 32], "heuristic_carniv": [0, 2], "high": [16, 23, 29, 31, 35, 36], "highli": 23, "hipk2": 32, "hist": 36, "hole": [18, 20, 32], "horizon": 35, "hour": 22, "hous": 32, "how": [8, 17, 18, 21, 22, 24, 27, 30, 31, 35], "howev": [17, 30, 31, 32], "hoxa2": 32, "hoxb7": 32, "hoxd3": 32, "hstack": [0, 1], "html": 32, "http": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "human": 23, "hyper": 21, "hyperedg": [14, 17], "hyperged": 0, "hypergraph": [7, 17, 19], "hypothesi": 13, "i": [2, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 27, 29, 30, 31, 32, 33, 35], "i1": 32, "i2": 32, "id": [9, 22, 27, 36], "idea": 21, "identif": 32, "identifi": [17, 31, 32], "identifierbiomass_ecoli_cor": 22, "idx": 21, "illustr": [17, 31], "ilp": [18, 30, 31], "imag": 23, "imat": [7, 22, 24], "impl": [18, 20, 32], "implement": [7, 9, 14, 16, 17, 18, 21, 24, 32], "implementationo": 32, "impli": 31, "implic": [18, 20, 32], "import": [2, 5, 7, 9, 10, 14, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "import_optional_modul": [0, 4], "improv": [20, 32], "includ": [7, 9, 10, 13, 18, 20, 21, 27, 29, 31, 32, 35], "incom": 20, "incomplet": 2, "incorpor": 11, "incorrect": 2, "index": [0, 1, 20, 21, 36], "indic": [0, 1, 2, 17, 21, 22, 23, 27, 29, 31, 32], "indicator_toler": 1, "indirectli": 17, "individu": 16, "inequ": [18, 20, 23, 27, 36], "inf": 32, "infeas": [17, 31], "infer": [7, 12, 13, 17, 18, 21, 24, 32, 33, 35], "info": [0, 5, 6, 9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "inform": [13, 21, 22], "inher": [18, 31], "inhibit": [2, 21, 32], "initi": 2, "initial_dict": 2, "inject": 17, "input": [2, 20, 32], "input_nod": 2, "insight": 31, "inspect": 17, "instal": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "instanc": [16, 17, 31], "instead": [30, 31], "institut": 35, "int": [0, 1, 3, 17, 20, 32, 36], "integ": [0, 1, 2, 16, 18, 31, 32], "integer_toler": 2, "integr": [8, 13, 22, 23, 32], "integral_path": 2, "inter": 13, "interact": [2, 7, 8, 21, 31, 32], "interactom": 7, "intercellular": [7, 12], "interest": 17, "interfac": [7, 10, 12, 18, 20, 31, 32], "intern": [16, 17, 21, 22], "interoper": [7, 13, 14, 21, 22], "interrelationship": 18, "interv": 10, "intra": [7, 12], "intracellular": 13, "intric": 16, "introduc": [7, 17, 31], "intuit": 17, "invok": [10, 18, 20, 31, 32], "involv": [17, 18], "io": [9, 22, 27, 32, 36], "is_avail": [0, 1], "isn": 30, "issu": 17, "item": [14, 18, 32], "iter": [0, 1, 10, 20, 32], "its": [2, 11, 18, 22, 23], "j": 29, "just": [17, 30], "k": [16, 17, 18, 20, 29, 32], "kdm5c": 32, "kdm5d": 32, "kei": 0, "keyerror": 2, "kinas": 11, "klf2": 32, "knapsack": [7, 19], "know": 22, "knowledg": [7, 11, 12, 13, 18, 19, 22, 24, 32, 33, 35], "known": [22, 31, 32], "kwarg": [0, 2], "kwnoledg": 21, "l": 29, "l0_edg": 2, "l0_penalty_edg": 2, "l0_penalty_vertic": 2, "l0_vertic": 2, "l1": 32, "l1_flow": 2, "l1_penalty_flow": 2, "l2": 32, "l3": 32, "l4": 32, "lab": [7, 35], "label": 21, "lai": 10, "lam": 2, "larg": [9, 31, 32], "larger": [18, 32], "largest": [7, 19], "latest": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "layout": [22, 27], "lb": [1, 17], "lb_loss": 2, "le": 18, "lead": [13, 22], "learn": [17, 18, 35], "least": 17, "left": [20, 32], "len": [9, 18, 22, 27, 31, 36], "length": 14, "let": 17, "level": [12, 16, 23], "leverag": 35, "lexicograph": 32, "li": 22, "liana": [7, 12], "lib_nam": 4, "liberti": 16, "librari": [7, 12, 14, 21, 22, 30, 31, 35], "licens": 35, "ligand": 32, "like": [22, 23, 30, 31], "likelihood": 23, "limit": [18, 22, 31], "line": 23, "linear": [10, 16, 18, 20, 22, 31, 32], "linear_and": [0, 1], "linear_or": [0, 1], "linearli": 23, "link": [11, 17, 20, 23, 32], "list": [0, 1, 2, 3, 12, 21, 22, 27, 30, 31], "liu": 32, "load": 21, "load_model": [9, 22, 27], "lock": 32, "log10": 32, "logicor": 32, "logist": 20, "long": 11, "longitudinal_sampl": 2, "look": 23, "loop": [17, 21, 32], "low": [23, 36], "lower": [1, 17, 22, 31], "lowli": 23, "lp": [18, 20, 30, 32], "lr": 23, "m": [2, 10, 18, 30, 32], "m1": [23, 32], "m2": [23, 32], "m3": 23, "m4": 23, "m5": 23, "m6": 23, "m7": 23, "m8": 23, "m9": 23, "machin": 17, "made": 14, "mai": [22, 23], "main": [22, 32], "mainatin": 23, "maintain": [7, 35], "major": 15, "make": [7, 10, 14, 17, 22, 23, 30, 31, 35], "mani": [10, 12, 17, 18, 23, 27, 31], "manipul": 14, "manual": [7, 15, 19, 20, 24], "map": [2, 23, 32], "map2k1": 32, "mapk1": 32, "mapk3": 32, "mapk8": 32, "math": 10, "mathemat": [7, 17, 18, 20, 31, 35], "matrix": [16, 18, 22], "max": [18, 32], "max_edg": 2, "max_it": 10, "max_par": 1, "max_printed_output": 2, "max_second": 1, "max_tim": 2, "maxim": [17, 18, 20, 22, 27, 29], "maximum": [22, 31], "mdpt": [20, 32], "mean": [10, 17, 21, 22, 30, 31], "meaning": 22, "meas_id": 2, "measur": [2, 13, 23, 32], "mechan": [13, 31], "mediat": 13, "medium": [18, 20, 23, 32], "meet": 22, "mem": [20, 32], "memori": 22, "messag": 31, "metabol": [0, 2, 7, 12, 21, 22, 23, 27, 37], "metabolit": [9, 22, 23, 27], "method": [0, 1, 5, 6, 7, 9, 12, 14, 17, 21, 22, 23, 27, 29, 30, 31, 32, 36], "methodologi": [7, 13], "might": [16, 30], "millimol": 22, "milp": 18, "min": [1, 7, 24], "minim": [7, 12, 17, 20, 23, 27, 31, 35, 36], "minimis": 32, "minimum": [17, 22, 31], "miom": 22, "miss": 2, "mix": [14, 18, 21], "mmol": 22, "mode": 32, "model": [0, 3, 7, 12, 13, 16, 17, 18, 20, 21, 22, 24, 27, 30, 31, 32, 37], "modifi": [9, 31, 32, 35], "modul": [5, 6, 8], "modular": [7, 18], "module_nam": 4, "molecul": 17, "molecular": [13, 32], "more": [7, 9, 10, 13, 14, 17, 19, 21, 22, 23, 30, 31, 32], "moreov": 31, "most": 10, "mostli": 21, "move": 22, "mul": 18, "multi": [7, 13, 16, 18, 19, 24, 33], "multicondit": 22, "multicondition_imat": [2, 3, 23, 36], "multidimension": 16, "multipl": [10, 16, 18, 20, 21, 31, 32], "multipli": 20, "multitud": 14, "must": 29, "my_graph": 21, "n": [10, 18, 20, 29, 30, 32], "n1": 32, "n2": 32, "n_flow": [1, 20], "n_node": 31, "n_process": 3, "nad_c": [9, 22], "nadh_c": [9, 22], "nadp_c": 22, "nadph_c": 22, "name": [0, 1], "namebiomass": 22, "natur": [22, 23], "ndarrai": [1, 3], "ne": 17, "necessari": 17, "need": [10, 16, 17, 18, 20, 21, 22, 30, 31, 32], "neg": [1, 17, 30, 32], "negative_flow": [1, 17], "network": [7, 8, 9, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 30, 31, 32, 33, 35], "networkx": [7, 12, 21, 28, 30], "neurod1": 32, "new": [0, 21, 27, 31, 32], "next": 32, "nfatc4": 32, "nfyb": 32, "nhlh2": 32, "nnz": 10, "node": [14, 17, 18, 20, 23, 29, 30, 31, 32], "node_valu": 32, "nodeview": 14, "non": 31, "none": [0, 1, 2, 3, 18, 30, 31], "nonlinear": 18, "nonneg": [17, 18, 23, 27, 36], "nonposit": 23, "nonzero": 17, "nonzeroind": [0, 1], "normal": [17, 22, 23, 31], "notabl": 31, "notat": 18, "note": [14, 17, 20, 30], "novel": [7, 13], "now": [17, 18, 20, 27, 31], "np": [1, 10, 16, 17, 20, 23, 29, 30, 31, 36], "npj": 32, "num_edg": 23, "num_flux": 3, "number": [10, 17, 27, 31, 32], "numer": [10, 17, 18, 20, 31, 32], "numpi": [10, 16, 17, 20, 23, 29, 30, 31, 36], "nv": 17, "nx": [14, 30, 31], "nx_graph": 31, "nxc": 14, "o": [29, 35], "oaa_c": 22, "obj": 18, "obj1": 18, "obj2": 18, "obj3": 18, "obj4": 18, "obj5": 18, "object": [1, 2, 3, 10, 14, 16, 18, 20, 22, 29, 30, 31, 32, 36], "obtain": [10, 17, 18, 20, 31, 32], "occur": 22, "oct": [10, 18, 20, 31, 32], "off": [10, 32], "offer": [7, 9, 12, 16, 18, 21, 31], "often": [23, 30, 31], "old": 32, "omic": [7, 8, 11, 13, 33, 35], "omnipath": [7, 12], "onc": [10, 16, 31], "one": [7, 10, 12, 16, 17, 18, 20, 21, 23, 31], "ones": [17, 27, 30], "onli": [17, 21, 29, 31], "open": [10, 14, 16, 31, 35], "oper": [10, 14, 21], "opposit": 17, "opt": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "optim": [1, 7, 12, 13, 14, 17, 19, 20, 21, 22, 23, 29, 30, 31, 32, 35], "option": [1, 12], "orbit": 32, "orbitop": 32, "order": [17, 21, 22], "organ": [22, 23], "origin": [17, 18, 23, 31, 32], "orphan_edg": [17, 30, 31], "osqp": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "other": [12, 14, 16, 18, 21, 22, 23, 30, 31, 32], "our": [20, 32], "out": [10, 17, 32], "outgo": 20, "output": [2, 20, 32], "output_nod": 2, "outward": 17, "over": [16, 17, 22], "overal": 31, "overhead": 16, "oxford": 10, "p": [1, 2, 10, 16, 17, 20, 22, 23, 27, 29, 30, 31, 32, 36], "p_v": 29, "pack": 18, "packag": [5, 6, 7, 9, 11, 35], "panda": [20, 32, 36], "paper": 23, "parallel": [0, 14, 21], "paramet": [0, 1, 2, 3, 10, 17, 18, 20, 31, 32], "part": 22, "particular": [17, 22, 30], "particularli": [18, 30, 31], "pass": [14, 17], "path": [2, 7, 14, 21, 28, 32], "pathwai": [15, 22, 23, 32], "pattern": 3, "pcost": 16, "pcst": [7, 28], "pd": [20, 32, 36], "pep_c": 22, "per": [17, 20, 22], "perform": 14, "permedco": 35, "permit": 31, "permut": 32, "pert_id": 2, "perturb": [2, 13, 17, 32], "philosophi": [12, 16], "phosphat": 22, "phospho": [11, 22], "phosphosit": 11, "pi_c": 22, "pico": [7, 9, 10, 12, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "picos_model": 16, "picosbackend": [0, 1, 16], "picosexpress": 16, "pik3r1": 32, "pinpoint": 31, "pip": 35, "pipelin": 32, "pkl": 21, "pkn": 2, "pl": [22, 23, 27, 32], "plagl2": 32, "plai": 31, "plan": 20, "platform": 10, "pleas": [13, 30], "plot": [0, 14, 17, 20, 21, 22, 23, 27, 29, 30, 31, 32], "plot_valu": 32, "plsh": 10, "pm": [10, 18, 20, 31, 32], "point": [17, 31], "polish": 10, "posit": [1, 17, 32], "positive_flow": [1, 17], "possibl": 31, "post": 23, "potenti": [31, 32], "power": [7, 35], "practic": 17, "practition": 22, "pre": 16, "predict": [22, 23], "prefer": [16, 18, 31], "preprocess": 32, "presenc": 27, "present": [16, 20, 21], "preserv": 21, "presolv": [18, 20, 32], "previous": 31, "pri": 10, "primal": [16, 18, 20, 32], "primalbound": [20, 32], "primari": 14, "primarili": 22, "principl": 22, "print": [2, 14, 17, 18, 21, 22, 27, 29, 31], "prior": [7, 11, 12, 13, 15, 18, 19, 22, 24, 32, 33, 35], "priorknowledgenetwork": 2, "prize": [7, 28], "prkdc": 32, "prob": 31, "probabilist": 17, "probe": 32, "problem": [0, 1, 2, 7, 10, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 27, 29, 30, 31, 32, 35, 36], "problemdef": [1, 2, 3, 10, 16, 18], "procedur": 9, "process": [2, 10, 11, 31, 32, 33], "produc": 22, "product": [21, 22], "profit": 20, "profit_c1": 20, "profit_c2": 20, "program": [7, 16, 18, 22, 31, 32], "programm": 35, "project": 35, "proof": 31, "propag": 17, "propens": 23, "properti": 1, "protein": [2, 7, 21, 22, 23, 31, 32], "proteom": 11, "proven": 31, "provid": [2, 7, 10, 12, 14, 18, 21, 22, 31, 32, 33], "provis": 31, "prune": [2, 32], "ptpn1": 32, "public": 23, "purpl": 23, "purpos": [17, 21], "put": [18, 29], "pyr_c": 22, "python": [7, 10, 12, 35], "qdldl": 10, "qp": 10, "qp2symbolicqp": 10, "qpmatrixstuf": 10, "quad": 18, "qualnam": [0, 1], "quantifi": 22, "quantil": 23, "quantiti": 22, "queue_max_s": 2, "quick": [7, 33], "quickli": 31, "r": [22, 32], "r5p_c": 22, "rac1": 32, "rais": [2, 17], "randint": [30, 31], "random": [7, 17, 21, 28, 31], "random_graph": 31, "rang": [10, 14, 17, 23, 31], "rankdir": 23, "rate": 22, "rather": 23, "raw_value_1": 36, "raw_value_2": 36, "raw_value_3": 36, "raw_value_4": 36, "re": [10, 32], "reachability_graph": [0, 2], "reactant": 21, "reaction": [9, 21, 22, 23, 27], "reaction_object": 3, "reaction_sends_activation_c0": 32, "reaction_sends_inhibition_c0": 32, "read": [2, 7, 19], "read_csv": 36, "read_dataset": [0, 2, 32], "read_sbml_model": 36, "real": [16, 35], "realm": [22, 31], "reason": [31, 32], "receiv": 23, "receptor": 32, "reciproc": 31, "recommend": [17, 21], "reconstruct": [7, 22, 23, 35], "red": 23, "reduc": [17, 31], "reduct": [10, 18, 20, 31, 32], "refer": [32, 35], "reflect": 23, "reformul": 7, "regex": 3, "regist": 17, "reguatori": 32, "regul": [11, 32], "regulatori": [15, 22], "reimplement": 7, "rel": 29, "relat": [1, 17], "relationship": 17, "relev": 22, "reli": [17, 23], "remain": [16, 32], "remov": [9, 17], "replac": [30, 31], "repres": [2, 17, 22, 23, 32], "represent": [10, 17, 21, 23], "requir": [9, 10, 17, 18, 20, 21, 23, 31, 32], "research": [14, 22, 31], "resolv": 13, "resourc": [11, 15, 20], "respect": 20, "rest": 16, "restrict": 31, "restricted_search": [2, 32], "result": 23, "return": [0, 1, 2, 3, 21, 30, 31], "revers": [0, 5, 6], "revolv": 21, "rho": 10, "rich": 13, "rid": [22, 27], "robust": 31, "rodriguez": [7, 35], "role": 31, "root": [2, 17], "root_vertic": 2, "round": [18, 20, 32], "rout": 20, "row": [20, 22, 32, 36], "rule": 22, "run": [10, 31, 32], "runinversecarniv": [0, 2], "runtim": 16, "runvanillacarniv": [0, 2, 32], "runx2": 32, "saez": [7, 35], "saezlab": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "sai": 17, "samal": 22, "same": [14, 17, 31], "save": [7, 19], "scalabl": [10, 13], "scalar": 1, "scale": [3, 7, 9, 10, 21, 22, 23, 32], "scaled_termin": 10, "scenario": [17, 31], "scientif": 18, "scientist": 14, "scip": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "scipi": [1, 9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "score": [23, 32, 36], "scsgraphviz": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "seamlessli": 10, "search": [16, 17], "sec": [18, 20, 32], "second": [10, 18, 20, 31, 32], "see": [13, 14, 17, 18, 21, 22, 27, 30, 31], "seed": [30, 31], "seek": 31, "seen": 16, "select": [16, 17, 18, 31, 32], "selected_edg": 32, "selected_react": 36, "self": 21, "sepa": [20, 32], "serv": 17, "set": [1, 10, 11, 17, 18, 21, 22, 31, 33], "set_attr": [0, 5, 6], "set_index": 36, "setppc": 32, "shape": [1, 2, 9, 10, 14, 16, 20, 22, 23, 31, 32, 36], "share": 20, "shared_bound": [1, 20], "shlomi": 23, "shortest": [7, 14, 21, 28, 31], "shortest_path": [0, 5, 6, 14, 30], "shortest_path_length": [14, 30], "should": 30, "show": [22, 23, 24], "side": [18, 20, 32], "sif": 21, "sif_fil": 0, "sif_graph": 21, "sigma": 10, "sign": [11, 17, 32], "signal": [0, 5, 6, 7, 12, 13, 17, 21, 32], "signal_implies_flow": 2, "signflow": [0, 2], "signflow_constraint": [0, 2], "signific": 10, "similar": [16, 32], "simpler": 30, "simpli": 17, "simplifi": [10, 17], "simultan": [20, 31], "sinc": [17, 23, 31, 32], "singl": [13, 20], "single_source_dijkstra_path": 14, "single_source_dijkstra_path_length": 14, "sink": [7, 19], "sirt1": 32, "size": [31, 32], "skip_unsupported_edg": 14, "slower": 30, "small": [17, 20, 31], "so": [17, 18], "sol": [18, 30], "solut": [7, 10, 16, 17, 18, 20, 22, 30, 31, 32], "solv": [0, 1, 2, 10, 13, 16, 17, 18, 20, 22, 23, 27, 29, 30, 31, 32, 36], "solve_shortest_path": [0, 2, 30], "solver": [1, 2, 7, 9, 10, 12, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "solver_kwarg": 2, "some": [12, 17, 18, 21, 29, 31, 32], "someth": 21, "sort": 17, "sourc": [2, 7, 10, 14, 16, 19, 21, 31, 35], "source_attr": [0, 5, 6, 21], "space": [17, 18, 31], "span": 31, "spars": [1, 7, 22, 24], "sparse_class": 1, "spatial": 13, "special": [14, 17, 18, 21, 27], "species_activated_c0": 32, "species_inhibited_c0": 32, "specif": [7, 10, 16, 17, 18, 20, 21, 22, 24, 30, 31, 37], "specifi": [2, 18], "spent": [10, 18, 20, 31, 32], "split": 10, "st": [7, 28], "stand": 31, "standard": [14, 31, 32], "stanford": 10, "star": 30, "start": [0, 1, 7, 10, 16, 17, 20, 21, 32], "startswith": [3, 36], "stat": 32, "stat1": 32, "state": [2, 22, 23], "static": [0, 1], "statist": [2, 11, 32], "statu": [10, 18, 20, 31, 32], "steadi": [22, 23], "steiner": [0, 5, 6, 7, 28], "steiner_tre": 31, "stellato": 10, "stem": 31, "still": [21, 31], "stoichiometr": [22, 23], "stoichiometri": 22, "stop": 31, "store": 21, "str": [0, 1, 2, 3], "straightforward": 21, "strategi": 16, "strbr": [20, 32], "stree": 31, "strict": [10, 31], "strict_acycl": [2, 31], "strictli": 31, "structur": [14, 17, 31], "studi": 9, "sub": [17, 32], "subject": 18, "submodul": [0, 5, 6], "subnetwork": 31, "subpackag": [5, 6], "subset": [18, 31, 32], "subset_edg": 2, "subseteq": 31, "substanc": 22, "success": 10, "successfulli": 31, "suffix": 1, "suffix_neg": 1, "suffix_po": 1, "suit": 21, "suitabl": 16, "sum": [10, 16, 17, 18, 20, 22, 27, 31, 36], "sum_": [18, 29], "summari": [10, 18, 20, 31, 32], "superior": 31, "support": [0, 7, 10, 12, 14, 16, 17, 21, 22, 31, 32, 35], "supt20h": 32, "switch": 10, "symbol": [1, 16, 17, 23, 29, 31, 32], "symbol_valu": 3, "symbol_values_list": 3, "symcod": [20, 32], "symmetri": [20, 32], "system": [9, 10, 18, 22, 23, 31, 32], "systemat": 23, "t": [0, 2, 16, 22, 23, 30, 31], "tackl": [10, 31], "tailor": [10, 31], "take": [11, 16, 17, 18, 20, 21, 27], "tala": 36, "target": [2, 10, 11, 14, 17, 18, 20, 21, 31, 32], "target_attr": [0, 5, 6], "task": [30, 31, 33], "tbx20": 32, "techniqu": [17, 18, 22, 23], "telecommun": 20, "tempor": 22, "termin": [2, 17, 29, 31], "terminal_per_condit": 2, "test": [11, 13, 36], "tet1": 32, "text": [18, 29], "textbook": [9, 22, 27], "tf": 32, "than": [17, 23, 30, 31, 32], "thank": [18, 32], "thd2": 36, "thei": [22, 23, 30, 31], "them": [29, 31], "therefor": 13, "thermodynam": 23, "thi": [1, 10, 14, 16, 17, 18, 20, 21, 22, 23, 24, 30, 31, 32, 35], "think": 14, "those": [13, 17, 31], "though": 22, "thought": 13, "three": 2, "threshold": 23, "through": [12, 16, 18, 20, 21, 22, 23, 32], "throughput": 23, "thu": 17, "tighten": [18, 20, 32], "time": [10, 18, 20, 22, 31, 32], "time_limit": 10, "timefram": 31, "tissu": 23, "titl": 36, "tkt1": 36, "tkt2": 36, "to_dict": 36, "to_direct": 30, "to_graph": 31, "to_networkx": 21, "todo": [17, 30], "togeth": 14, "toler": [1, 2, 17], "tolist": 36, "tomer": 23, "too": 29, "took": [10, 18, 20, 31, 32], "tool": [7, 9, 10, 12, 14, 21, 23, 30, 31, 32, 33, 35], "toolkit": 14, "top": [7, 21], "topolog": 17, "topologi": 32, "total": [14, 18, 20, 22, 27, 29, 31, 32], "total_valu": 18, "total_weight": [18, 31], "toward": [14, 32], "tpi": 36, "tradit": 23, "trairatphisan": 32, "transcript": [11, 22, 23, 32], "transcriptom": [11, 37], "transform": [14, 17, 18, 21, 22, 32], "translat": [7, 22, 23], "transpar": 31, "transport": 20, "tree": [7, 28], "trick": 17, "tripl": 21, "triplet": 21, "trivial": 18, "true": [0, 1, 2, 14, 17, 18, 20, 23, 27, 30, 31, 32, 36], "try": 27, "tupl": [0, 1, 2], "turnov": 22, "tutori": [8, 13, 17, 21, 22, 24, 30, 31, 35], "two": [2, 17, 18, 20, 29, 30, 31, 32], "type": [0, 1, 2, 3, 7, 10, 16, 18, 20, 21, 29, 31, 32], "typic": [18, 22, 31], "u": [21, 30, 31], "ub": [1, 17, 20], "ub_loss": 2, "unblock": 27, "unblocked_flow": 27, "unconstrain": 27, "under": [21, 22, 23, 35], "undergo": 23, "underli": 33, "underpin": 31, "understand": [13, 22, 31], "undirect": [0, 5, 6, 8, 14, 21, 29, 31], "unifi": [7, 11, 18, 35], "uniform": 30, "union": [1, 35], "uniqu": 31, "unit": 22, "univers": [7, 10, 35], "unknown": [20, 23, 27, 31, 32, 36], "unless": 17, "unlik": [10, 29, 31], "unobserv": 31, "until": 31, "up": [14, 32], "upgd": [18, 32], "upon": 17, "upper": [1, 22], "upregul": 23, "upstream": [13, 32], "urban": 20, "us": [1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35], "use_flow_ind": 2, "use_unblocked_flux_ind": 3, "user": [10, 16, 21, 31, 32, 35], "usual": 22, "util": [0, 5, 6], "v": [1, 17, 21, 29, 30, 31, 32], "v0": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "v1": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "v2": [9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36], "v3": 17, "v4": 17, "v5": 17, "v6": 17, "v7": 17, "v_i": 18, "valid": [17, 31], "valu": [0, 1, 2, 5, 6, 10, 16, 17, 18, 20, 22, 23, 27, 29, 30, 31, 32, 36], "valuabl": 15, "var": [18, 20, 32], "varbound": 32, "variabl": [0, 1, 9, 10, 16, 17, 18, 20, 21, 23, 27, 29, 31, 32, 36], "varieti": [31, 32], "variou": [7, 12, 13, 16, 20, 23], "varnam": 1, "vartyp": [0, 1, 18], "vbound": 32, "ve": 31, "vector": [16, 27, 31], "verbos": [1, 2, 10, 16, 18, 20, 31], "veri": [17, 18, 21, 31], "versatil": [10, 14, 30], "version": [0, 1, 9, 10, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36], "vertex": [2, 7, 19, 21, 29], "vertex_attr": 2, "vertex_lb_dist": 1, "vertex_styl": 32, "vertex_valu": 32, "vertex_values_c0": 32, "vertex_var": 32, "vertic": [0, 2, 17, 20, 21, 29, 30, 31], "via": 16, "visit": 17, "visual": 14, "vivek": 22, "volum": 32, "vstack": [0, 1], "w": [3, 31], "w_i": 18, "wa": 32, "wai": [10, 17, 21, 22, 31], "want": [17, 31], "warm": 10, "warm_start": 1, "warshal": 30, "we": [12, 14, 17, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32], "weight": [1, 7, 11, 14, 17, 18, 20, 21, 22, 23, 27, 28, 29, 31], "well": [21, 31, 32], "were": [17, 32], "what": [7, 17, 24, 35], "when": [14, 21, 22, 27, 30, 31, 32], "where": [2, 17, 18, 21, 22, 29, 31], "whether": 29, "which": [10, 16, 17, 18, 21, 22, 23, 31, 32], "while": [12, 14, 16, 18, 20, 23, 31], "white": 23, "who": 21, "whose": 23, "wide": [18, 32], "wider": 23, "wip": 35, "wish": 31, "with_flow": [1, 17], "with_label": 31, "within": [10, 11, 18, 21, 27, 31], "without": [10, 32], "work": [12, 14, 21, 30], "world": 35, "x": [1, 10, 16, 18, 32], "x_i": 18, "x_v": 29, "xor": [0, 1], "xz": 21, "y": 1, "y_e": 29, "yield": 31, "you": [10, 16, 17, 18, 20, 21, 22, 29, 30, 31, 32, 35], "your": [10, 18, 20, 31, 32], "z0": 3, "za": 3, "zbtb4": 32, "zero": [17, 20, 23, 27, 36], "zip": [2, 17, 29, 31, 32, 36], "zip_path": 2, "zipfil": 2}, "titles": ["corneto package", "corneto.backend package", "corneto.methods package", "corneto.methods.metabolism package", "corneto.utils package", "API Reference", "corneto", "User guide", "Interactomics", "COBRApy: Constraint-based metabolic modeling in Python", "CVXPY: Convex optimization, for everyone", "Decoupler: Ensemble of methods to infer biological activities", "Interoperability", "LIANA+: An all-in-one cell-cell communication framework", "NetworkX: Network Analysis in Python", "Omnipath: intra- &amp; intercellular signaling knowledge", "PICOS: A Python interface to conic optimization solvers", "Acyclic Flows", "Constrained Optimization", "Getting started", "Multi-commodity Network Flows", "Prior Knowledge and Graphs", "Flux Balance Analysis (FBA)", "Context-specific models (iMAT)", "Metabolism", "Multi-condition iMAT", "Multi-condition sparse FBA", "Sparse FBA", "Network methods", "Prize-Collecting Steiner Trees (PCSTs)", "Shortest paths", "Steiner Trees (STs)", "CARNIVAL", "Signaling", "Multi-condition CARNIVAL", "CORNETO <span class=\"hidden-title-marker\"></span>", "Context-specific metabolic model from transcriptomics data", "Tutorials"], "titleterms": {"A": [16, 18, 32], "The": 18, "acknowledg": 35, "activ": 11, "acycl": 17, "all": 13, "an": 13, "analysi": [14, 22], "ani": 17, "api": 5, "attribut": 21, "backend": 1, "balanc": 22, "base": 9, "biolog": 11, "carniv": [2, 32, 34], "cell": 13, "class": 35, "cobrapi": [9, 22], "collect": 29, "commod": 20, "commun": 13, "complex": 18, "condit": [25, 26, 34], "conic": 16, "constrain": 18, "constraint": 9, "content": [0, 1, 2, 3, 4, 5], "context": [23, 36], "convex": 10, "corneto": [0, 1, 2, 3, 4, 5, 6, 22, 31, 35], "creat": [21, 30], "cvxpy": 10, "dag": 17, "data": 36, "decoupl": 11, "edg": 21, "ensembl": 11, "everyon": 10, "exact": 31, "exampl": 32, "fast": 32, "fba": [3, 22, 26, 27], "flow": [17, 20], "flux": [22, 27], "framework": 13, "from": [17, 31, 36], "get": 19, "given": 17, "graph": [21, 30], "guid": 7, "heurist": 31, "hidden": 35, "hypergraph": 21, "i": 22, "imat": [23, 25], "implement": 27, "import": 21, "infer": 11, "interactom": 8, "intercellular": 15, "interfac": 16, "interoper": 12, "intra": 15, "knapsack": 18, "knowledg": [15, 21], "largest": 17, "liana": 13, "manual": [21, 27], "marker": 35, "metabol": [3, 9, 24, 36], "method": [2, 3, 11, 28], "min": 27, "model": [9, 23, 36], "modul": [0, 1, 2, 3, 4], "more": 18, "multi": [20, 25, 26, 34], "network": [14, 20, 28], "networkx": [14, 31], "omnipath": 15, "one": 13, "optim": [10, 16, 18], "packag": [0, 1, 2, 3, 4], "path": 30, "pcst": 29, "pico": 16, "prior": 21, "prize": 29, "problem": 18, "python": [9, 14, 16], "quick": 32, "random": 30, "read": 21, "refer": 5, "save": 21, "shortest": 30, "shortest_path": 2, "signal": [2, 15, 33], "sink": 17, "solver": 16, "sourc": 17, "span": 35, "spars": [26, 27], "specif": [23, 36], "st": 31, "start": 19, "steiner": [2, 29, 31], "submodul": [2, 3], "subpackag": [0, 2], "titl": 35, "transcriptom": 36, "tree": [29, 31], "tutori": 37, "us": 22, "user": 7, "util": 4, "vertex": 17, "weight": 30, "what": 22}})